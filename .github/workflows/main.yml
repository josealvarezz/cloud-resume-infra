name: Terraform Check & Build

env:
  TF_VAR_is_github_actions: "true"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
    secrets:
      AWS_ROLE_TO_ASSUME_TF:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pages: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: eu-west-3
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_TF }}

      - name: Checkout backend repo
        uses: actions/checkout@v4
        with:
          repository: josealvarezz/cloud-resume-backend
          ref: main
          path: backend-repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Lamdba zip
        run: |
          cd backend-repo/lambda
          zip -r lambda_function.zip lambda_function.py
      - name: Copy Lambda zip
        run: cp backend-repo/lambda/lambda_function.zip terraform/

      - name: Terraform Plan
        id: plan
        working-directory: terraform
        run: |
          terraform init
          terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve tfplan

      - name: Terraform Output
        id: tf_output
        working-directory: terraform
        run: |
          echo "api_gateway_url=$(terraform output -raw api_gateway_url)" >> $GITHUB_ENV
          echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_ENV
